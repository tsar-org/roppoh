/**
 * Generated by orval v7.12.2 üç∫
 * Do not edit manually.
 * Coolify
 * OpenAPI spec version: 0.1
 */
import type { CreatePrivateGithubAppApplicationBodiesBuildPack } from "./create-private-github-app-application-bodies-build-pack";
import type { CreatePrivateGithubAppApplicationBodiesRedirect } from "./create-private-github-app-application-bodies-redirect";
import type { CreatePrivateGithubAppApplicationBodiesStaticImage } from "./create-private-github-app-application-bodies-static-image";

export type CreatePrivateGithubAppApplicationBodies = {
  /** The project UUID. */
  project_uuid: string;
  /** The server UUID. */
  server_uuid: string;
  /** The environment name. You need to provide at least one of environment_name or environment_uuid. */
  environment_name: string;
  /** The environment UUID. You need to provide at least one of environment_name or environment_uuid. */
  environment_uuid: string;
  /** The Github App UUID. */
  github_app_uuid: string;
  /** The git repository URL. */
  git_repository: string;
  /** The git branch. */
  git_branch: string;
  /** The ports to expose. */
  ports_exposes: string;
  /** The destination UUID. */
  destination_uuid?: string;
  /** The build pack type. */
  build_pack: CreatePrivateGithubAppApplicationBodiesBuildPack;
  /** The application name. */
  name?: string;
  /** The application description. */
  description?: string;
  /** The application domains. */
  domains?: string;
  /** The git commit SHA. */
  git_commit_sha?: string;
  /** The docker registry image name. */
  docker_registry_image_name?: string;
  /** The docker registry image tag. */
  docker_registry_image_tag?: string;
  /** The flag to indicate if the application is static. */
  is_static?: boolean;
  /** The static image. */
  static_image?: CreatePrivateGithubAppApplicationBodiesStaticImage;
  /** The install command. */
  install_command?: string;
  /** The build command. */
  build_command?: string;
  /** The start command. */
  start_command?: string;
  /** The ports mappings. */
  ports_mappings?: string;
  /** The base directory for all commands. */
  base_directory?: string;
  /** The publish directory. */
  publish_directory?: string;
  /** Health check enabled. */
  health_check_enabled?: boolean;
  /** Health check path. */
  health_check_path?: string;
  /**
   * Health check port.
   * @nullable
   */
  health_check_port?: string | null;
  /**
   * Health check host.
   * @nullable
   */
  health_check_host?: string | null;
  /** Health check method. */
  health_check_method?: string;
  /** Health check return code. */
  health_check_return_code?: number;
  /** Health check scheme. */
  health_check_scheme?: string;
  /**
   * Health check response text.
   * @nullable
   */
  health_check_response_text?: string | null;
  /** Health check interval in seconds. */
  health_check_interval?: number;
  /** Health check timeout in seconds. */
  health_check_timeout?: number;
  /** Health check retries count. */
  health_check_retries?: number;
  /** Health check start period in seconds. */
  health_check_start_period?: number;
  /** Memory limit. */
  limits_memory?: string;
  /** Memory swap limit. */
  limits_memory_swap?: string;
  /** Memory swappiness. */
  limits_memory_swappiness?: number;
  /** Memory reservation. */
  limits_memory_reservation?: string;
  /** CPU limit. */
  limits_cpus?: string;
  /**
   * CPU set.
   * @nullable
   */
  limits_cpuset?: string | null;
  /** CPU shares. */
  limits_cpu_shares?: number;
  /** Custom labels. */
  custom_labels?: string;
  /** Custom docker run options. */
  custom_docker_run_options?: string;
  /** Post deployment command. */
  post_deployment_command?: string;
  /** Post deployment command container. */
  post_deployment_command_container?: string;
  /** Pre deployment command. */
  pre_deployment_command?: string;
  /** Pre deployment command container. */
  pre_deployment_command_container?: string;
  /** Manual webhook secret for Github. */
  manual_webhook_secret_github?: string;
  /** Manual webhook secret for Gitlab. */
  manual_webhook_secret_gitlab?: string;
  /** Manual webhook secret for Bitbucket. */
  manual_webhook_secret_bitbucket?: string;
  /** Manual webhook secret for Gitea. */
  manual_webhook_secret_gitea?: string;
  /**
   * How to set redirect with Traefik / Caddy. www<->non-www.
   * @nullable
   */
  redirect?: CreatePrivateGithubAppApplicationBodiesRedirect;
  /** The flag to indicate if the application should be deployed instantly. */
  instant_deploy?: boolean;
  /** The Dockerfile content. */
  dockerfile?: string;
  /** The Docker Compose location. */
  docker_compose_location?: string;
  /** The Docker Compose raw content. */
  docker_compose_raw?: string;
  /** The Docker Compose custom start command. */
  docker_compose_custom_start_command?: string;
  /** The Docker Compose custom build command. */
  docker_compose_custom_build_command?: string;
  /** The Docker Compose domains. */
  docker_compose_domains?: unknown[];
  /** The watch paths. */
  watch_paths?: string;
  /**
   * Use build server.
   * @nullable
   */
  use_build_server?: boolean | null;
  /** HTTP Basic Authentication enabled. */
  is_http_basic_auth_enabled?: boolean;
  /**
   * Username for HTTP Basic Authentication
   * @nullable
   */
  http_basic_auth_username?: string | null;
  /**
   * Password for HTTP Basic Authentication
   * @nullable
   */
  http_basic_auth_password?: string | null;
  /** The flag to connect the service to the predefined Docker network. */
  connect_to_docker_network?: boolean;
  /** Force domain usage even if conflicts are detected. Default is false. */
  force_domain_override?: boolean;
};
